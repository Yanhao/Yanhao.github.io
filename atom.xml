<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yanhao&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.yanhao.org/"/>
  <updated>2018-02-22T02:42:04.708Z</updated>
  <id>http://blog.yanhao.org/</id>
  
  <author>
    <name>Yanhao Mo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux系统三权分立</title>
    <link href="http://blog.yanhao.org/2017/10/12/Linux%E7%B3%BB%E7%BB%9F%E4%B8%89%E6%9D%83%E5%88%86%E7%AB%8B/"/>
    <id>http://blog.yanhao.org/2017/10/12/Linux系统三权分立/</id>
    <published>2017-10-12T12:56:27.000Z</published>
    <updated>2018-02-22T02:42:04.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>考虑将linux系统中的用户分为3到4个, 分别是系统管理员, 安全管理员和审计员</p><p>审计员的要求:<br>审计服务一直启动, 不能被其他用户, 特别是root杀死.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;考虑将linux系统中的用户分为3到4个, 分别是系统管理员, 安全管理员和审计员&lt;/p&gt;
&lt;p&gt;审计员的要求:&lt;br&gt;审计服务一直启动, 
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://blog.yanhao.org/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>swapPairs</title>
    <link href="http://blog.yanhao.org/2017/10/06/swapPairs/"/>
    <id>http://blog.yanhao.org/2017/10/06/swapPairs/</id>
    <published>2017-10-06T08:02:58.000Z</published>
    <updated>2018-02-22T02:42:04.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>Given a linked list, swap every two adjacent nodes and return its head.</p><p>For example,<br>Given <strong>1-&gt;2-&gt;3-&gt;4</strong>, you should return the list as <strong>2-&gt;1-&gt;4-&gt;3</strong>.</p><p>Your algorithm should use only constant space. You may not modify the values in the list, only nodes itself can be changed.</p><h1 id="解"><a href="#解" class="headerlink" title="解"></a>解</h1><p>Python<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ListNode</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        self.val = x</span><br><span class="line">        self.next = <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">swapPairs</span><span class="params">(self, head)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> head == <span class="keyword">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line">        t = ListNode(<span class="number">0</span>)</span><br><span class="line">        t.next = head</span><br><span class="line">        head = t</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> t <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span> <span class="keyword">and</span> t.next <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span> <span class="keyword">and</span> t.next.next <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">            a = t.next</span><br><span class="line">            t.next = a.next</span><br><span class="line">            a.next = t.next.next</span><br><span class="line">            t.next.next = a</span><br><span class="line">            t = a</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> head.next</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;Given a linked list, swap every two adjacent nodes and return its head
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://blog.yanhao.org/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>mergeKLists</title>
    <link href="http://blog.yanhao.org/2017/10/06/mergeKLists/"/>
    <id>http://blog.yanhao.org/2017/10/06/mergeKLists/</id>
    <published>2017-10-06T07:20:40.000Z</published>
    <updated>2018-02-22T02:42:04.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>Merge k sorted linked lists and return it as one sorted list. Analyze and describe its complexity.</p><h1 id="解"><a href="#解" class="headerlink" title="解"></a>解</h1><p>Python<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">mergeTwoLists</span><span class="params">(self, l1, l2)</span>:</span></span><br><span class="line">        a, b = l1, l2</span><br><span class="line">        h = <span class="keyword">None</span></span><br><span class="line">        t = h</span><br><span class="line">        <span class="keyword">while</span> a <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span> <span class="keyword">and</span> b <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">            z = <span class="keyword">None</span></span><br><span class="line">            <span class="keyword">if</span> a.val &lt;= b.val:</span><br><span class="line">                z = a</span><br><span class="line">                a = a.next</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                z = b</span><br><span class="line">                b = b.next</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> t <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">                h = z</span><br><span class="line">                t = h</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                t.next = z</span><br><span class="line">                t = t.next</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        z = a <span class="keyword">if</span> a <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span> <span class="keyword">else</span> b</span><br><span class="line">        <span class="keyword">if</span> z <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">            <span class="keyword">if</span> t <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">                h = z</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                t.next = z</span><br><span class="line">        <span class="keyword">return</span> h</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">mergeKLists</span><span class="params">(self, lists)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> lists == []:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> len(lists) == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> lists[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">while</span> len(lists) &gt; <span class="number">1</span>:</span><br><span class="line">            lists = [self.mergeTwoLists(lists[<span class="number">0</span>], lists[<span class="number">1</span>])] + lists[<span class="number">2</span>:]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> lists[<span class="number">0</span>]</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;Merge k sorted linked lists and return it as one sorted list. Analyze 
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://blog.yanhao.org/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>generateParenthesis</title>
    <link href="http://blog.yanhao.org/2017/10/04/generateParenthesis/"/>
    <id>http://blog.yanhao.org/2017/10/04/generateParenthesis/</id>
    <published>2017-10-04T07:24:25.000Z</published>
    <updated>2018-02-22T02:42:04.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.</p><p>For example, given n = 3, a solution set is:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &quot;((()))&quot;,</span><br><span class="line">  &quot;(()())&quot;,</span><br><span class="line">  &quot;(())()&quot;,</span><br><span class="line">  &quot;()(())&quot;,</span><br><span class="line">  &quot;()()()&quot;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h1 id="解"><a href="#解" class="headerlink" title="解"></a>解</h1><p>Python<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">generateParenthesis</span><span class="params">(self, n)</span>:</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">backtrace</span><span class="params">(l, s, open, close, m)</span>:</span></span><br><span class="line">            <span class="keyword">if</span> len(s) == m*<span class="number">2</span>:</span><br><span class="line">                l.append(s)</span><br><span class="line">            <span class="keyword">if</span> open &lt; m:</span><br><span class="line">                backtrace(l, s+<span class="string">"("</span>, open+<span class="number">1</span>, close, m)</span><br><span class="line">            <span class="keyword">if</span> close &lt; open:</span><br><span class="line">                backtrace(l, s+<span class="string">")"</span>, open, close+<span class="number">1</span>, m)</span><br><span class="line"></span><br><span class="line">        r = []</span><br><span class="line">        backtrace(r, <span class="string">""</span>, <span class="number">0</span>, <span class="number">0</span>, n)</span><br><span class="line">        <span class="keyword">return</span> r</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;Given n pairs of parentheses, write a function to generate all combina
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://blog.yanhao.org/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>mergeTwoLists</title>
    <link href="http://blog.yanhao.org/2017/10/04/mergeTwoLists/"/>
    <id>http://blog.yanhao.org/2017/10/04/mergeTwoLists/</id>
    <published>2017-10-04T03:01:10.000Z</published>
    <updated>2018-02-22T02:42:04.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.</p><h1 id="解"><a href="#解" class="headerlink" title="解"></a>解</h1><p>Python<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">mergeTwoLists</span><span class="params">(self, l1, l2)</span>:</span></span><br><span class="line">        a, b = l1, l2</span><br><span class="line">        h = <span class="keyword">None</span></span><br><span class="line">        t = h</span><br><span class="line">        <span class="keyword">while</span> a <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span> <span class="keyword">and</span> b <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">            z = <span class="keyword">None</span></span><br><span class="line">            <span class="keyword">if</span> a.val &lt;= b.val:</span><br><span class="line">                z = a</span><br><span class="line">                a = a.next</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                z = b</span><br><span class="line">                b = b.next</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> t <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">                h = z</span><br><span class="line">                t = h</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                t.next = z</span><br><span class="line">                t = t.next</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        z = a <span class="keyword">if</span> a <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span> <span class="keyword">else</span> b</span><br><span class="line">        <span class="keyword">if</span> z <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">            <span class="keyword">if</span> t <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">                h = z</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                t.next = z</span><br><span class="line">        <span class="keyword">return</span> h</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;Merge two sorted linked lists and return it as a new list. The new lis
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://blog.yanhao.org/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>isValid</title>
    <link href="http://blog.yanhao.org/2017/10/04/isValid/"/>
    <id>http://blog.yanhao.org/2017/10/04/isValid/</id>
    <published>2017-10-04T02:47:44.000Z</published>
    <updated>2018-02-22T02:42:04.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>Given a string containing just the characters ‘(‘, ‘)’, ‘{‘, ‘}’, ‘[‘ and ‘]’, determine if the input string is valid.</p><p>The brackets must close in the correct order, “()” and “()[]{}” are all valid but “(]” and “([)]” are not.</p><h1 id="解"><a href="#解" class="headerlink" title="解"></a>解</h1><p>Python<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isValid</span><span class="params">(self, s)</span>:</span></span><br><span class="line">        r = <span class="string">""</span></span><br><span class="line">        d = &#123;</span><br><span class="line">            <span class="string">")"</span>: <span class="string">"("</span>,</span><br><span class="line">            <span class="string">"]"</span>: <span class="string">"["</span>,</span><br><span class="line">            <span class="string">"&#125;"</span>: <span class="string">"&#123;"</span>,</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">            <span class="keyword">if</span> i <span class="keyword">in</span> <span class="string">")]&#125;"</span>:</span><br><span class="line">                <span class="keyword">if</span> r != <span class="string">""</span> <span class="keyword">and</span> r[<span class="number">-1</span>] == d[i]:</span><br><span class="line">                    r = r[:<span class="number">-1</span>]</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                r += i</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span> <span class="keyword">if</span> r == <span class="string">""</span> <span class="keyword">else</span> <span class="keyword">False</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;Given a string containing just the characters ‘(‘, ‘)’, ‘{‘, ‘}’, ‘[‘ 
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://blog.yanhao.org/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>letterCombinations</title>
    <link href="http://blog.yanhao.org/2017/10/03/letterCombinations/"/>
    <id>http://blog.yanhao.org/2017/10/03/letterCombinations/</id>
    <published>2017-10-03T13:16:58.000Z</published>
    <updated>2018-02-22T02:42:04.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>Given a digit string, return all possible letter combinations that the number could represent.</p><p>A mapping of digit to letters (just like on the telephone buttons) is given below.</p><blockquote><p>Input:Digit string “23”<br>Output: [“ad”, “ae”, “af”, “bd”, “be”, “bf”, “cd”, “ce”, “cf”].</p></blockquote><p><strong>Note:</strong><br>Although the above answer is in lexicographical order, your answer could be in any order you want.</p><h1 id="解"><a href="#解" class="headerlink" title="解"></a>解</h1><p>Python<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">letterCombinations</span><span class="params">(self, digits)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> digits == <span class="string">""</span>:</span><br><span class="line">            <span class="keyword">return</span> []</span><br><span class="line">        d = &#123;</span><br><span class="line">            <span class="string">"1"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"2"</span>: <span class="string">"abc"</span>,</span><br><span class="line">            <span class="string">"3"</span>: <span class="string">"def"</span>,</span><br><span class="line">            <span class="string">"4"</span>: <span class="string">"ghi"</span>,</span><br><span class="line">            <span class="string">"5"</span>: <span class="string">"jkl"</span>,</span><br><span class="line">            <span class="string">"6"</span>: <span class="string">"mno"</span>,</span><br><span class="line">            <span class="string">"7"</span>: <span class="string">"pqrs"</span>,</span><br><span class="line">            <span class="string">"8"</span>: <span class="string">"tuv"</span>,</span><br><span class="line">            <span class="string">"9"</span>: <span class="string">"wxyz"</span>,</span><br><span class="line">            <span class="string">"0"</span>: <span class="string">""</span>,</span><br><span class="line">        &#125;</span><br><span class="line">        r = [<span class="string">""</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(digits)):</span><br><span class="line">            l = len(r)</span><br><span class="line">            <span class="keyword">for</span> z <span class="keyword">in</span> range(<span class="number">0</span>, l):</span><br><span class="line">                <span class="keyword">if</span> len(r[<span class="number">0</span>]) == i:</span><br><span class="line">                    t = r[<span class="number">0</span>]</span><br><span class="line">                    r.remove(r[<span class="number">0</span>])</span><br><span class="line">                    <span class="keyword">for</span> j <span class="keyword">in</span> d[digits[i]]:</span><br><span class="line">                        r.append(t+j)</span><br><span class="line">        <span class="keyword">return</span> r</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;Given a digit string, return all possible letter combinations that the
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://blog.yanhao.org/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>removeNthFromEnd</title>
    <link href="http://blog.yanhao.org/2017/10/03/removeNthFromEnd/"/>
    <id>http://blog.yanhao.org/2017/10/03/removeNthFromEnd/</id>
    <published>2017-10-03T12:09:45.000Z</published>
    <updated>2018-02-22T02:42:04.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>Given a linked list, remove the nth node from the end of list and return its head.<br>For example,</p><blockquote><p>Given linked list: 1-&gt;2-&gt;3-&gt;4-&gt;5, and n = 2.<br>After removing the second node from the end, the linked list becomes 1-&gt;2-&gt;3-&gt;5.</p></blockquote><p><strong>Note:</strong><br>Given n will always be valid.<br>Try to do this in one pass.</p><h1 id="解"><a href="#解" class="headerlink" title="解"></a>解</h1><p>Python<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ListNode</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        self.val = x;</span><br><span class="line">        self.next = <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">removeNthFromEnd</span><span class="params">(self, head, n)</span>:</span></span><br><span class="line">        a, b = head, head</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</span><br><span class="line">            b = b.next</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> b <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">            head = head.next</span><br><span class="line">            <span class="keyword">return</span> head</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">            a, b = a.next, b.next</span><br><span class="line">            <span class="keyword">if</span> b <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">                head.next = head.next.next</span><br><span class="line">                <span class="keyword">return</span> head</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> b.next <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        a.next = a.next.next</span><br><span class="line">        <span class="keyword">return</span> head</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;Given a linked list, remove the nth node from the end of list and retu
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://blog.yanhao.org/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>threeSumClosest</title>
    <link href="http://blog.yanhao.org/2017/10/01/threeSumClosest/"/>
    <id>http://blog.yanhao.org/2017/10/01/threeSumClosest/</id>
    <published>2017-10-01T03:12:26.000Z</published>
    <updated>2018-02-22T02:42:04.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers.<br>You may assume that each input would have exactly one solution.</p><blockquote><p>For example, given array S = {-1 2 1 -4}, and target = 1.<br>The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).</p></blockquote><h1 id="解"><a href="#解" class="headerlink" title="解"></a>解</h1><p>Python<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">threeSumClosest</span><span class="params">(self, nums, target)</span>:</span></span><br><span class="line">        nums.sort()</span><br><span class="line">        z = <span class="number">1000</span></span><br><span class="line">        r = []</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(nums)):</span><br><span class="line">            a, b = <span class="number">0</span>, len(nums)<span class="number">-1</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">                a = a <span class="keyword">if</span> a != i <span class="keyword">else</span> a + <span class="number">1</span></span><br><span class="line">                b = b <span class="keyword">if</span> b != i <span class="keyword">else</span> b - <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> a &gt;= b:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                c = nums[a] + nums[b] + nums[i]</span><br><span class="line">                <span class="keyword">if</span> c == target:</span><br><span class="line">                    <span class="keyword">return</span> nums[i] + nums[a] + nums[b]</span><br><span class="line">                <span class="keyword">elif</span> c &gt; target:</span><br><span class="line">                    <span class="keyword">if</span> c-target &lt; z:</span><br><span class="line">                        z = c-target</span><br><span class="line">                        r = [nums[i], nums[a], nums[b]]</span><br><span class="line">                    b -= <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">if</span> target-c &lt; z:</span><br><span class="line">                        z = target-c</span><br><span class="line">                        r = [nums[i], nums[a], nums[b]]</span><br><span class="line">                    a += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> r[<span class="number">0</span>] + r[<span class="number">1</span>] + r[<span class="number">2</span>]</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;Given an array S of n integers, find three integers in S such that the
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://blog.yanhao.org/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>threeSum</title>
    <link href="http://blog.yanhao.org/2017/09/29/threeSum/"/>
    <id>http://blog.yanhao.org/2017/09/29/threeSum/</id>
    <published>2017-09-29T14:19:31.000Z</published>
    <updated>2018-02-22T02:42:04.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="解"><a href="#解" class="headerlink" title="解"></a>解</h1><p>Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.</p><p>Note: The solution set must not contain duplicate triplets.</p><blockquote><p>For example, given array S = [-1, 0, 1, 2, -1, -4],</p><p>A solution set is:<br>[<br>  [-1, 0, 1],<br>  [-1, -1, 2]<br>]</p></blockquote><h1 id="解-1"><a href="#解-1" class="headerlink" title="解"></a>解</h1><p>Python<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">threeSum</span><span class="params">(self, nums)</span>:</span></span><br><span class="line">        nums.sort()</span><br><span class="line">        r = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(nums)):</span><br><span class="line">            a, b = <span class="number">0</span>, len(nums)<span class="number">-1</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">                a = a <span class="keyword">if</span> a != i <span class="keyword">else</span> a + <span class="number">1</span></span><br><span class="line">                b = b <span class="keyword">if</span> b != i <span class="keyword">else</span> b - <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> a &gt;= b:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">if</span> nums[a] + nums[b] == -nums[i]:</span><br><span class="line">                    t = [nums[i], nums[a], nums[b]]</span><br><span class="line"></span><br><span class="line">                    flag = <span class="keyword">True</span></span><br><span class="line">                    <span class="keyword">for</span> z <span class="keyword">in</span> r:</span><br><span class="line">                        <span class="keyword">if</span> set(t) == set(z):</span><br><span class="line">                            flag = <span class="keyword">False</span></span><br><span class="line">                            <span class="keyword">break</span></span><br><span class="line">                    <span class="keyword">if</span> flag:</span><br><span class="line">                        r.append(t)</span><br><span class="line">                    b -= <span class="number">1</span></span><br><span class="line">                    a += <span class="number">1</span></span><br><span class="line">                <span class="keyword">elif</span> nums[a] + nums[b] &gt; -nums[i]:</span><br><span class="line">                    b -= <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    a += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> r</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;解&quot;&gt;&lt;a href=&quot;#解&quot; class=&quot;headerlink&quot; title=&quot;解&quot;&gt;&lt;/a&gt;解&lt;/h1&gt;&lt;p&gt;Given an array S of n integers, are there elements a, b, c in S such that 
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://blog.yanhao.org/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>longestCommonPrefix</title>
    <link href="http://blog.yanhao.org/2017/09/29/longestCommonPrefix/"/>
    <id>http://blog.yanhao.org/2017/09/29/longestCommonPrefix/</id>
    <published>2017-09-29T13:18:11.000Z</published>
    <updated>2018-02-22T02:42:04.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>Write a function to find the longest common prefix string amongst an array of strings.</p><h1 id="解"><a href="#解" class="headerlink" title="解"></a>解</h1><p>Python<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestCommonPrefix</span><span class="params">(self, strs)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> strs == []:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line">        f = strs[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> strs[<span class="number">1</span>:]:</span><br><span class="line">            r = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> idx <span class="keyword">in</span> range(<span class="number">0</span>, min(len(f), len(i))):</span><br><span class="line">                <span class="keyword">if</span> f[:idx+<span class="number">1</span>] == i[:idx+<span class="number">1</span>]:</span><br><span class="line">                    r += <span class="number">1</span></span><br><span class="line">            f = f[:r]</span><br><span class="line">        <span class="keyword">return</span> f</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;Write a function to find the longest common prefix string amongst an a
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://blog.yanhao.org/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>intToRoman</title>
    <link href="http://blog.yanhao.org/2017/09/27/intToRoman/"/>
    <id>http://blog.yanhao.org/2017/09/27/intToRoman/</id>
    <published>2017-09-27T12:55:50.000Z</published>
    <updated>2018-02-22T02:42:04.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>Given an integer, convert it to a roman numeral.</p><p>Input is guaranteed to be within the range from 1 to 3999.</p><h1 id="解"><a href="#解" class="headerlink" title="解"></a>解</h1><p>Python<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">intToRoman</span><span class="params">(self, nums)</span>:</span></span><br><span class="line">        syms = [</span><br><span class="line">            [<span class="string">"M"</span>, <span class="number">1000</span>],</span><br><span class="line">            [<span class="string">"CM"</span>, <span class="number">900</span>],</span><br><span class="line">            [<span class="string">"D"</span>, <span class="number">500</span>],</span><br><span class="line">            [<span class="string">"CD"</span>, <span class="number">400</span>],</span><br><span class="line">            [<span class="string">"C"</span>, <span class="number">100</span>],</span><br><span class="line">            [<span class="string">"XC"</span>, <span class="number">90</span>],</span><br><span class="line">            [<span class="string">"L"</span>, <span class="number">50</span>],</span><br><span class="line">            [<span class="string">"XL"</span>, <span class="number">40</span>],</span><br><span class="line">            [<span class="string">"X"</span>, <span class="number">10</span>],</span><br><span class="line">            [<span class="string">"IX"</span>, <span class="number">9</span>],</span><br><span class="line">            [<span class="string">"V"</span>, <span class="number">5</span>],</span><br><span class="line">            [<span class="string">"IV"</span>, <span class="number">4</span>],</span><br><span class="line">            [<span class="string">"I"</span>, <span class="number">1</span>],</span><br><span class="line">        ]</span><br><span class="line">        r = <span class="string">""</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> syms:</span><br><span class="line">            <span class="keyword">while</span> nums &gt;= i[<span class="number">1</span>]:</span><br><span class="line">                nums -= i[<span class="number">1</span>]</span><br><span class="line">                r += i[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">return</span> r</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;Given an integer, convert it to a roman numeral.&lt;/p&gt;
&lt;p&gt;Input is guara
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://blog.yanhao.org/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>isMatch</title>
    <link href="http://blog.yanhao.org/2017/09/27/isMatch/"/>
    <id>http://blog.yanhao.org/2017/09/27/isMatch/</id>
    <published>2017-09-27T12:17:00.000Z</published>
    <updated>2018-02-22T02:42:04.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>Implement regular expression matching with support for ‘.’ and ‘*‘.</p><blockquote><p>‘.’ Matches any single character.<br>‘*’ Matches zero or more of the preceding element.</p><p>The matching should cover the entire input string (not partial).</p><p>The function prototype should be:<br>bool isMatch(const char <em>s, const char </em>p)</p><p>Some examples:<br>isMatch(“aa”,”a”) → false<br>isMatch(“aa”,”aa”) → true<br>isMatch(“aaa”,”aa”) → false<br>isMatch(“aa”, “a<em>“) → true<br>isMatch(“aa”, “.</em>“) → true<br>isMatch(“ab”, “.<em>“) → true<br>isMatch(“aab”, “c</em>a*b”) → true</p></blockquote><h1 id="解"><a href="#解" class="headerlink" title="解"></a>解</h1><p>Python<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isMatch</span><span class="params">(self, s, p)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> s == p:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">        <span class="keyword">if</span> len(p) == <span class="number">0</span> <span class="keyword">and</span> len(s) &gt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">        firstMatch = len(s) &gt; <span class="number">0</span> <span class="keyword">and</span> p[<span class="number">0</span>] <span class="keyword">in</span> &#123;s[<span class="number">0</span>], <span class="string">'.'</span>&#125;</span><br><span class="line">        <span class="keyword">if</span> len(p) &gt;= <span class="number">2</span> <span class="keyword">and</span> p[<span class="number">1</span>] == <span class="string">'*'</span>:</span><br><span class="line">            <span class="keyword">return</span> firstMatch <span class="keyword">and</span> self.isMatch(s[<span class="number">1</span>:], p) <span class="keyword">or</span> self.isMatch(s, p[<span class="number">2</span>:])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> firstMatch <span class="keyword">and</span> self.isMatch(s[<span class="number">1</span>:], p[<span class="number">1</span>:])</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;Implement regular expression matching with support for ‘.’ and ‘*‘.&lt;/p
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://blog.yanhao.org/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>maxArea</title>
    <link href="http://blog.yanhao.org/2017/09/26/maxArea/"/>
    <id>http://blog.yanhao.org/2017/09/26/maxArea/</id>
    <published>2017-09-26T13:04:11.000Z</published>
    <updated>2018-02-22T02:42:04.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>Given n non-negative integers a1, a2, …, an, where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.</p><p>Note: You may not slant the container and n is at least 2.</p><h1 id="解"><a href="#解" class="headerlink" title="解"></a>解</h1><p>Python<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxArea</span><span class="params">(self, height)</span>:</span></span><br><span class="line">        m = <span class="number">0</span></span><br><span class="line">        l = <span class="number">0</span></span><br><span class="line">        r = len(height) - <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r:</span><br><span class="line">            m = max(m, min(height[l], height[r])*(r-l))</span><br><span class="line">            <span class="keyword">if</span> height[l] &lt; height[r]:</span><br><span class="line">                l += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                r -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> m</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;Given n non-negative integers a1, a2, …, an, where each represents a p
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://blog.yanhao.org/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>isPalindrome</title>
    <link href="http://blog.yanhao.org/2017/09/26/isPalindrome/"/>
    <id>http://blog.yanhao.org/2017/09/26/isPalindrome/</id>
    <published>2017-09-26T12:28:55.000Z</published>
    <updated>2018-02-22T02:42:04.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>Determine whether an integer is a palindrome. Do this without extra space.</p><h1 id="解"><a href="#解" class="headerlink" title="解"></a>解</h1><p>Python<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isPalindrome</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> x &lt; <span class="number">0</span> <span class="keyword">or</span> (x%<span class="number">10</span> == <span class="number">0</span> <span class="keyword">and</span> x != <span class="number">0</span>):</span><br><span class="line">            <span class="keyword">return</span> false</span><br><span class="line">        r = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> x &gt; r:</span><br><span class="line">            r = r*<span class="number">10</span> + x%<span class="number">10</span></span><br><span class="line">            x = x // <span class="number">10</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> x == r <span class="keyword">or</span> x == r//<span class="number">10</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;Determine whether an integer is a palindrome. Do this without extra sp
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://blog.yanhao.org/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>myAtoi</title>
    <link href="http://blog.yanhao.org/2017/09/25/myAtoi/"/>
    <id>http://blog.yanhao.org/2017/09/25/myAtoi/</id>
    <published>2017-09-25T12:51:56.000Z</published>
    <updated>2018-02-22T02:42:04.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>Implement atoi to convert a string to an integer.</p><p>Hint: Carefully consider all possible input cases. If you want a challenge, please do not see below and ask yourself what are the possible input cases.</p><p>Notes: It is intended for this problem to be specified vaguely (ie, no given input specs). You are responsible to gather all the input requirements up front.</p><h1 id="解"><a href="#解" class="headerlink" title="解"></a>解</h1><p>Python<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">myAtoi</span><span class="params">(self, str)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> str == <span class="string">""</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(str)):</span><br><span class="line">            <span class="keyword">if</span> str[i] != <span class="string">' '</span>:</span><br><span class="line">                str = str[i:]</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> str <span class="keyword">in</span> (<span class="string">'-'</span>, <span class="string">'+'</span>):</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        sign = <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> str[<span class="number">0</span>] == <span class="string">'-'</span>:</span><br><span class="line">            sign = <span class="number">-1</span></span><br><span class="line">            str = str[<span class="number">1</span>:]</span><br><span class="line">        <span class="keyword">elif</span> str[<span class="number">0</span>] == <span class="string">'+'</span>:</span><br><span class="line">            str = str[<span class="number">1</span>:]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ord(str[<span class="number">0</span>]) &gt; ord(<span class="string">'9'</span>) <span class="keyword">or</span> ord(str[<span class="number">0</span>]) &lt; ord(<span class="string">'0'</span>):</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        r = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> str:</span><br><span class="line">            <span class="keyword">if</span> ord(i) &gt; ord(<span class="string">'9'</span>) <span class="keyword">or</span> ord(i) &lt; ord(<span class="string">'0'</span>):</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                r = r*<span class="number">10</span> + int(i)</span><br><span class="line">        r = r*sign</span><br><span class="line">        <span class="keyword">if</span> r &gt; <span class="number">2147483647</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">2147483647</span></span><br><span class="line">        <span class="keyword">elif</span> r &lt; <span class="number">-2147483648</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-2147483648</span></span><br><span class="line">        <span class="keyword">return</span> r</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;Implement atoi to convert a string to an integer.&lt;/p&gt;
&lt;p&gt;Hint: Careful
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://blog.yanhao.org/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>reverse</title>
    <link href="http://blog.yanhao.org/2017/09/25/reverse/"/>
    <id>http://blog.yanhao.org/2017/09/25/reverse/</id>
    <published>2017-09-25T10:52:19.000Z</published>
    <updated>2018-02-22T02:42:04.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>Reverse digits of an integer.</p><p>Example1: x = 123, return 321<br>Example2: x = -123, return -321</p><h1 id="解"><a href="#解" class="headerlink" title="解"></a>解</h1><p>Python<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">reverse</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure></p><p>C<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">reverse</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> r = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (x != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (r &gt; INT_MAX/<span class="number">10</span> || r &lt; INT_MIN/<span class="number">10</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        r = r*<span class="number">10</span> + x%<span class="number">10</span>;</span><br><span class="line">        x /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;Reverse digits of an integer.&lt;/p&gt;
&lt;p&gt;Example1: x = 123, return 321&lt;br&gt;
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://blog.yanhao.org/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>longestPalindrome</title>
    <link href="http://blog.yanhao.org/2017/09/23/longestPalindrome/"/>
    <id>http://blog.yanhao.org/2017/09/23/longestPalindrome/</id>
    <published>2017-09-23T09:50:01.000Z</published>
    <updated>2018-02-22T02:42:04.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>Given a string s, find the longest palindromic substring in s.<br>You may assume that the maximum length of s is 1000.</p><p><strong>Example:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Input: &quot;babad&quot;</span><br><span class="line"></span><br><span class="line">Output: &quot;bab&quot;</span><br><span class="line"></span><br><span class="line">Note: &quot;aba&quot; is also a valid answer.</span><br></pre></td></tr></table></figure><p><strong>Example:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: &quot;cbbd&quot;</span><br><span class="line"></span><br><span class="line">Output: &quot;bb&quot;</span><br></pre></td></tr></table></figure><h1 id="解"><a href="#解" class="headerlink" title="解"></a>解</h1><p>Python</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestPalindrome</span><span class="params">(self, s)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> len(s) &gt; <span class="number">1000</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValurError</span><br><span class="line"></span><br><span class="line">        result = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(s)):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(i+<span class="number">1</span>, len(s)):</span><br><span class="line">                <span class="keyword">if</span> s[i:j] == s[i:j][::<span class="number">-1</span>]:</span><br><span class="line">                    <span class="keyword">if</span> len(s[i:j]) &gt; result[<span class="number">2</span>]:</span><br><span class="line">                        result = [i, j, len(s[i:j])]</span><br><span class="line">        <span class="keyword">return</span> result[i:j]</span><br></pre></td></tr></table></figure><p>Python<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestPalindrome</span><span class="params">(self, s)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> len(s) &gt; <span class="number">10000</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValueError</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">expandAroundCenter</span><span class="params">(st, left, right)</span>:</span></span><br><span class="line">            <span class="keyword">while</span> left &gt;= <span class="number">0</span> <span class="keyword">and</span> right &lt; len(st) <span class="keyword">and</span> st[left] == st[right]:</span><br><span class="line">                left, right = left<span class="number">-1</span>, right+<span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> right-left<span class="number">-1</span></span><br><span class="line"></span><br><span class="line">        start, end = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(s)):</span><br><span class="line">            l1 = expandAroundCenter(s, i, i)</span><br><span class="line">            l2 = expandAroundCenter(s, i, i+<span class="number">1</span>)</span><br><span class="line">            length = max(l1, l2)</span><br><span class="line">            <span class="keyword">if</span> length &gt; end - start:</span><br><span class="line">                start = i - (length <span class="number">-1</span>) // <span class="number">2</span></span><br><span class="line">                end = i + length // <span class="number">2</span></span><br><span class="line">        <span class="keyword">return</span> s[start:end+<span class="number">1</span>]</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;Given a string s, find the longest palindromic substring in s.&lt;br&gt;You 
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://blog.yanhao.org/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>findMedianSortedArrays</title>
    <link href="http://blog.yanhao.org/2017/09/23/findMedianSortedArrays/"/>
    <id>http://blog.yanhao.org/2017/09/23/findMedianSortedArrays/</id>
    <published>2017-09-23T04:01:54.000Z</published>
    <updated>2018-02-22T02:42:04.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>There are two sorted arrays nums1 and nums2 of size m and n respectively.</p><p>Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).</p><p>Example 1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nums1 = [1, 3]</span><br><span class="line">nums2 = [2]</span><br><span class="line"></span><br><span class="line">The median is 2.0</span><br></pre></td></tr></table></figure></p><p>Example 2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nums1 = [1, 2]</span><br><span class="line">nums2 = [3, 4]</span><br><span class="line"></span><br><span class="line">The median is (2 + 3)/2 = 2.5</span><br></pre></td></tr></table></figure></p><h1 id="解"><a href="#解" class="headerlink" title="解"></a>解</h1><p>Python<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findMedianSortedArrays</span><span class="params">(self, nums1, nums2)</span>:</span></span><br><span class="line">        m, n = len(nums1), len(nums2)</span><br><span class="line">        <span class="keyword">if</span> m &gt; n:</span><br><span class="line">            nums1, nums2 = nums2, nums1</span><br><span class="line">            m, n = n, m</span><br><span class="line">        imin, imax = <span class="number">0</span>, m</span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValueError</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> imin &lt;= imax:</span><br><span class="line">            i = (imin + imax) // <span class="number">2</span></span><br><span class="line">            j = (m+n+<span class="number">1</span>) // <span class="number">2</span> - i</span><br><span class="line">            <span class="keyword">if</span> i &lt; m <span class="keyword">and</span> nums2[j<span class="number">-1</span>] &gt; nums1[i]:</span><br><span class="line">                imin = i + <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> i &gt; <span class="number">0</span> <span class="keyword">and</span> nums1[i<span class="number">-1</span>] &gt; nums2[j]:</span><br><span class="line">                imax = i - <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">                    lmax = nums2[j<span class="number">-1</span>]</span><br><span class="line">                <span class="keyword">elif</span> j == <span class="number">0</span>:</span><br><span class="line">                    lmax = nums1[i<span class="number">-1</span>]</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    lmax = max(nums1[i<span class="number">-1</span>], nums2[j<span class="number">-1</span>])</span><br><span class="line">                <span class="keyword">if</span> (m + n) % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">                    <span class="keyword">return</span> lmax</span><br><span class="line">                <span class="keyword">if</span> i == m:</span><br><span class="line">                    rmin = nums2[j]</span><br><span class="line">                <span class="keyword">elif</span> j == n:</span><br><span class="line">                    rmin = nums1[i]</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    rmin = min(nums1[i], nums2[j])</span><br><span class="line">                <span class="keyword">return</span> (lmax + rmin) / <span class="number">2</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;There are two sorted arrays nums1 and nums2 of size m and n respective
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://blog.yanhao.org/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>lengthOfLongestSubstring</title>
    <link href="http://blog.yanhao.org/2017/09/21/lengthOfLongestSubstring/"/>
    <id>http://blog.yanhao.org/2017/09/21/lengthOfLongestSubstring/</id>
    <published>2017-09-21T14:25:25.000Z</published>
    <updated>2018-02-22T02:42:04.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>Given a string, find the length of the longest substring without repeating characters.</p><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples:"></a>Examples:</h3><p>Given “abcabcbb”, the answer is “abc”, which the length is 3.<br>Given “bbbbb”, the answer is “b”, with the length of 1.<br>Given “pwwkew”, the answer is “wke”, with the length of 3. Note that the answer must be a substring, “pwke” is a subsequence and not a substring.</p><h1 id="解"><a href="#解" class="headerlink" title="解"></a>解</h1><p>Python<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(self, s)</span>:</span></span><br><span class="line">        i, j = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">        m = &#123;&#125;</span><br><span class="line">        length = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; len(s) <span class="keyword">and</span> j &lt; len(s):</span><br><span class="line">            <span class="keyword">if</span> s[j] <span class="keyword">in</span> m:</span><br><span class="line">                i = max(i, m[s[j]]+<span class="number">1</span>)</span><br><span class="line">            m[s[j]] = j</span><br><span class="line">            length = max(length, j-i+<span class="number">1</span>)</span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> length</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;Given a string, find the length of the longest substring without repea
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://blog.yanhao.org/tags/LeetCode/"/>
    
  </entry>
  
</feed>
